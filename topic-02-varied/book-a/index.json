


  {
  
  
  "type" : "lab",
  "title" : "Lab-02",
  "img" : "book-a/img/main.jpg",
  "videoid" : "none",
  "objectives" : "<p>A few sentences on the purpose of the lab. Avoid bullet points here for formatting reasons.</p>",
    
      "properties" : {},
    
    
      "folder" : "book-a",
    
    
      "link" : "book-a/index.html",
    
  "los": [
     ]
,
  "chapters" : [
  
    {
    "title": " Objectives",
    "shortTitle": "Lab-02",
    "contentMd" : "# Objectives\n\nA few sentences on the purpose of the lab. Avoid bullet points here for formatting reasons."
    },
  
    {
    "title": " Text",
    "shortTitle": "01",
    "contentMd" : "# Text\n\nIt's very easy to make some words **bold** and other words *italic* with Markdown. You can even [inset a link to Google](http://google.com)\n\n## Lists\n\nSometimes you want numbered lists:\n\n1. One\n2. Two\n3. Three\n\nSometimes you want bullet points:\n\n* Start a line with a star\n* Profit!\n\nAlternatively,\n\n- Dashes work just as well\n- And if you have sub points, put two spaces before the dash or star:\n  - Like this\n  - And this\n\n## Images\n\nIf you want a link to a local image, place the image in the `img` folder and then insert a link like this:\n\n![](img/02.jpg)\n\nAlternatively you can directly link to images on the web:\n\n![Image of Yaktocat](https://octodex.github.com/images/yaktocat.png)\n\nThe above includes a title.\n\n# Structured documents\n\nSometimes it's useful to have different levels of headings to structure your documents. Start lines with a `#` to create headings. Multiple `##` in a row denote smaller heading sizes.\n\n### This is a third-tier heading\n\nYou can use one `#` all the way up to `######` six for different heading sizes.\n\nIf you'd like to quote someone, use the > character before the line:\n\n> Coffee. The finest organic suspension ever devised... I beat the Borg with it.\n> - Captain Janeway\n\nThere are many different ways to style code with GitHub's markdown. If you have inline code blocks, wrap them in backticks: `var example = true`.  If you've got a longer block of code, you can indent with four spaces:\n\n    if (isAwesome){\n      return true\n    }\n\nGitHub also supports something called code fencing, which allows for multiple lines without indentation:\n\n~~~\nif (isAwesome){\n  return true\n}\n~~~\n\nAnd if you'd like to use syntax highlighting, include the language:\n\n~~~javascript\nif (isAwesome){\n  return true\n}\n~~~\n\n"
    },
  
    {
    "title": " Tables, Lines and Images",
    "shortTitle": "02",
    "contentMd" : "# Tables, Lines and Images\n\n\nTables can look like this:\n\nHead 1 | Head 2\n------ | -------\ncell 1 | cell 2\ncell 3 | cell 4\n\n\n---\n\nA horizontal rules above and below\n\n---\n\nSome more images:\n\n![](img/01.jpg)"
    },
  
    {
    "title": " Links and Code Blocks",
    "shortTitle": "03",
    "contentMd" : "# Links and Code Blocks\n\nYou can inert links in bullet points:\n\n- <http://github.com>\n- <http://bitbucket.dom>\n\nYou can also insert links to other steps:\n\n- [Step 01](#/01)\n- [Step 02](#/02)\n- [Step 03](#/03)\n- [Step 04](#/04)\n\nMore Code Block examples\n\n~~~\n  publish(path, course) {\n    const basePath = '../' + path + '/' + this.folder;\n    futils.initEmptyPath(basePath);\n\n    this.resources = this.talks.concat(this.labs);\n    futils.copyFileToFolder(this.img, basePath);\n    futils.writeFile(basePath + '/index.html', nunjucks.render('topic.html', this));\n\n    futils.writeFile(basePath + '/ajaxlabel.html',\n        nunjucks.render('ajaxlabel.html',\n            { url: this.url.substring(5) + '/' + this.folder }));\n    futils.writeFile(basePath + '/indexmoodle.html', nunjucks.render('indexmoodle.html', this));\n\n    console.log(this.title);\n    this.publishTalks(basePath);\n    this.publishLabs(basePath, course);\n  }\n~~~\n\nThis was autodetected as javascript. This one is html:\n\n~~~\n<div class=\"ui segment pushable\">\n  <div class=\"ui inverted labeled icon left inline vertical sidebar menu\">\n    {% for resource in course.allLabs.resources %}\n      {% if resource.title == title %}\n        <a class=\"active item\" href=\"../../{{resource.parentFolder}}/{{resource.folder}}/{{resource.link}}\">\n          {{resource.title}}\n        </a>\n      {% else %}\n        <a class=\"item\" href=\"../../{{resource.parentFolder}}/{{resource.folder}}/{{resource.link}}\">\n          {{resource.title}}\n        </a>\n      {% endif %}\n    {% endfor %}\n  </div>\n  <div class=\"pusher\">\n    <div class=\"ui basic segment\">\n      <br>\n      {% for chapter in chapters %}\n      <div  class=\"ui tab segment lab\" data-tab=\"{{chapter.shortTitle}}\">\n        {{ chapter.content }}\n      </div>\n     {% endfor %}\n    </div>\n  </div>\n</div>\n~~~\n"
    },
  
    {
    "title": " Images",
    "shortTitle": "04",
    "contentMd" : "# Images\n\nImage without a title:\n\n![](img/04.jpg)\n\nImage with a title:\n\n![This is a Stone Arch](img/03.jpg)\n"
    },
  
    {
    "title": " Exercises & Archives",
    "shortTitle": "Exercises",
    "contentMd" : "# Exercises & Archives\n\nYou can link to zipped archives:\n\n- [Solutions](./archives/archive.zip)\n\nThis archive must be placed in the `archives` folder as shown above.\n\n## Exercise 1:\n\nInstructions for exercise 1.\n\n## Exercise 2:\n\nInstructions for exercise 2.\n\n## Exercise 3:\n\nInstructions for exercise 3.\n"
    }
  
  ]
  }

